{"version":3,"sources":["components/AppMenu/styles.tsx","UI/Input.tsx","UI/Button.tsx","enum.tsx","components/Play/styles.tsx","api/config.ts","constants.tsx","api/cards.ts","api/user.ts","hooks/react-query/useFetchPairCards.tsx","hooks/react-query/useFetchDeskID.tsx","store.tsx","components/Play/index.ts","components/Play/Play.tsx","components/Spinner/styles.tsx","components/Spinner/index.ts","components/Spinner/Spinner.tsx","pages/BridgePage.tsx","components/SingInForm/styles.tsx","components/SingInForm/SingInForm.tsx","pages/LoginPage.tsx","routing/routes.tsx","components/AppMenu/index.ts","components/AppMenu/AppMenu.tsx","components/PrivateRoute/PrivateRoute.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","createStyles","appbar","backgroundColor","height","link","color","textDecoration","lineHeight","fontWeight","Input","label","variant","name","onChange","TextField","Button","size","content","onClick","type","optionChooseCards","stylesFlex","flexColumn","display","flexDirection","alignItems","theme","balance","textAlign","marginTop","marginBottom","containerPlay","padding","width","containerCards","justifyContent","alignSelf","breakpoints","down","buttons","margin","isModePlay","divider","card","border","borderRadius","questionMark","fontSize","api","axios","create","baseURL","responseType","valueCards","JACK","QUEEN","KING","ACE","namesCards","Left","Right","getNewDeskID","a","get","then","data","getPairCard","deckID","user","login","username","password","useFetchPairCard","idDesk","useQuery","apiCards","enabled","useFetchDeskID","checkLoginLocalStorage","localStorage","getItem","useStore","set","payForPlay","bid","state","incrementBalance","money","isAuth","loginSuccess","setItem","logoutSuccess","removeItem","loginError","activeLoginError","inactiveLoginError","remainingCards","updateRemainingCards","Play","deskID","useTheme","mobile","useMediaQuery","useState","winner","setWinner","setIsModePlay","selectedCard","setSelectedCard","cards","setCards","fetchPairCard","classes","isLoading","currentCard","remaining","useEffect","length","onHandleCard","chosenCard","isWinner","value","otherCard","filter","_","index","definedWinner","bidAmount","prev","leftCard","src","image","alt","rightCard","useMemo","resultText","buttonPlay","selectionButtons","Divider","orientation","className","gameOver","Typography","align","Grid","container","item","xs","sm","spinner","Spinner","CircularProgress","thickness","BridgePage","fetchDeskID","deck_id","form","spacing","SingInForm","formState","setFormState","e","target","to","pathname","Routes","Home","path","lg","onSubmit","preventDefault","apiUser","LoginPage","component","Login","AppMenu","exact","PrivateRoute","children","props","render","location","from","App","queryClient","QueryClient","ReactDOM","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.39fc7eb3.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => createStyles({\n\tappbar: {\n\t\tbackgroundColor: '#3f51b5',\n\t\theight: 70,\n\t},\n\tlink: {\n\t\tcolor: '#fff',\n\t\ttextDecoration: 'none',\n\t\tlineHeight: '32px',\n\t\t'&:hover': {\n\t\t\ttextDecoration: 'underline',\n\t\t},\n\t\t'&.active': {\n\t\t\tfontWeight: 'bold',\n\t\t},\n\t},\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { InputProps } from '../interfaces/UI';\n\nexport default function Input({ label, variant, name, onChange }: InputProps) {\n\treturn <TextField label={label} variant={variant} name={name} onChange={onChange} />;\n}\n","import React from 'react';\nimport { Button as ButtonMaterial } from '@material-ui/core';\nimport { ButtonProps } from '../interfaces/UI';\n\nexport default function Button({\n\tcolor,\n\tvariant,\n\tsize,\n\tcontent,\n\tonClick,\n\ttype,\n}: ButtonProps) {\n\treturn (\n\t\t<ButtonMaterial\n\t\t\ttype={type}\n\t\t\tcolor={color}\n\t\t\tvariant={variant}\n\t\t\tsize={size}\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t{content}\n\t\t</ButtonMaterial>\n\t);\n}\n","export enum optionChooseCards {\n  Left = 0,\n  Right = 1,\n}","import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst stylesFlex = createStyles({\n\tflexColumn: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n});\n\nconst useStyles = makeStyles((theme) => createStyles({\n\tbalance: {\n\t\ttextAlign: 'center',\n\t\tmarginTop: 20,\n\t\tmarginBottom: 20,\n\t},\n\tcontainerPlay: {\n\t\tpadding: '20px 0 100px 0',\n\t\twidth: '100%',\n\t\tbackgroundColor: '#3f51b515',\n\t\t...stylesFlex.flexColumn,\n\t},\n\tcontainerCards: {\n\t\tmarginTop: 100,\n\t\twidth: '100%',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-between',\n\t\talignSelf: 'center',\n\t\t[theme.breakpoints.down('sm')]: {\n\t\t\tmarginTop: 16,\n\t\t\tflexDirection: 'column',\n\t\t\talignItems: 'center',\n\t\t},\n\t},\n\tbuttons: {\n\t\tmargin: 20,\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-evenly',\n\t\talignItems: ({ isModePlay }: { isModePlay: boolean | null }) => (isModePlay ? 'space-between' : 'center'),\n\t},\n\tdivider: {\n\t\tmargin: '0 16px 0',\n\t},\n\tcard: {\n\t\tborder: ({ isModePlay }: { isModePlay: boolean | null }) => (isModePlay ? '2px solid #000' : 'none'),\n\t\tborderRadius: 16,\n\t\twidth: 220,\n\t\theight: 308,\n\t\t...stylesFlex.flexColumn,\n\t\t[theme.breakpoints.down('sm')]: {\n\t\t\twidth: 164,\n\t\t\theight: 230,\n\t\t\t'& img': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t},\n\tquestionMark: {\n\t\tmarginTop: 30,\n\t\tfontWeight: 900,\n\t\tfontSize: 74,\n\t},\n}));\n\nexport default useStyles;\n","import axios from 'axios';\n\nconst api = axios.create({\n\tbaseURL: 'https://deckofcardsapi.com/api/deck/',\n\tresponseType: 'json',\n});\nexport default api;\n","import { optionChooseCards } from './enum';\n\nexport const countCardsInPlay: number = 2;\n\nexport const userError: string = 'Имя пользователя или пароль введены неверно';\n\nexport const bidAmount: number = 5;\n\nexport const valueCards: { [index: string]: number } = {\n\t2: 2,\n\t3: 3,\n\t4: 4,\n\t5: 5,\n\t6: 6,\n\t7: 7,\n\t8: 8,\n\t9: 9,\n\t10: 10,\n\tJACK: 20,\n\tQUEEN: 30,\n\tKING: 50,\n\tACE: 100,\n};\n\nexport const namesCards: { [index: number]: string } = {\n\t[optionChooseCards.Left]: 'Left',\n\t[optionChooseCards.Right]: 'Right',\n};\n","/* eslint-disable no-undef */\nimport api from './config';\nimport { countCardsInPlay } from '../constants';\n\nexport const getNewDeskID = async () => api.get<TDataDeskID>('/new/shuffle/?deck_count=1').then(({ data }) => data);\n\nexport const getPairCard = async (deckID: string) => api.get<TDataPairCard>(`${deckID}/draw/?count=${countCardsInPlay}`).then(({ data }) => data);\n","import { SingInFormProps } from '../interfaces/UI';\n\nconst user: SingInFormProps = {\n\tusername: 'admin',\n\tpassword: '123456',\n};\n\nexport const login = async (data: SingInFormProps) => {\n\tif (data.username === user.username && data.password === user.password) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","/* eslint-disable no-undef */\nimport { useQuery } from 'react-query';\nimport { apiCards } from '../../api';\n\nconst useFetchPairCard = (idDesk: string, isModePlay: boolean | null) => {\n\tconst queryInfo = useQuery('pairCards', () => apiCards.getPairCard(idDesk), {\n\t\tenabled: !!isModePlay,\n\t});\n\n\treturn queryInfo;\n};\n\nexport default useFetchPairCard;\n","import { useQuery } from 'react-query';\nimport { apiCards } from '../../api';\n\nconst useFetchDeskID = () => {\n\tconst queryInfo = useQuery('newDeskID', apiCards.getNewDeskID);\n\n\treturn queryInfo;\n};\n\nexport default useFetchDeskID;\n","import create from 'zustand';\n\ntype TStore = {\n    balance: number;\n    incrementBalance: (money: number) => void;\n    payForPlay: (bid: number) => void;\n\n\tisAuth: boolean;\n\tloginSuccess: () => void;\n\tlogoutSuccess: () => void;\n\tloginError: boolean;\n\tactiveLoginError: () => void;\n\tinactiveLoginError: () => void;\n\n\tremainingCards: number | null;\n\tupdateRemainingCards: (remainingCards: number | null) => void;\n};\n\nconst checkLoginLocalStorage = (): boolean => {\n\ttry {\n\t\treturn localStorage.getItem('isAuth') === 'true';\n\t} catch {\n\t\treturn false;\n\t}\n};\n\n\nconst useStore = create<TStore>(\n\t(set): TStore => ({\n\t\tbalance: 100,\n\t\tpayForPlay: (bid: number) => set((state) => ({ balance: state.balance - bid })),\n\t\tincrementBalance: (money: number) => set((state) => ({ balance: state.balance + money })),\n\n\t\tisAuth: checkLoginLocalStorage(),\n\t\tloginSuccess: () => {\n\t\t\tset(() => ({ isAuth: true }));\n\t\t\ttry {\n\t\t\t\tlocalStorage.setItem('isAuth', 'true');\n\t\t\t} catch {\n\t\t\t\t// do noting\n\t\t\t}\n\t\t},\n\t\tlogoutSuccess: () => {\n\t\t\tset(() => ({ isAuth: false }));\n\t\t\ttry {\n\t\t\t\tlocalStorage.removeItem('isAuth');\n\t\t\t} catch {\n\t\t\t\t// do noting\n\t\t\t}\n\t\t},\n\t\tloginError: false,\n\t\tactiveLoginError: () => {\n\t\t\tset(() => ({ loginError: true }));\n\t\t},\n\t\tinactiveLoginError: () => {\n\t\t\tset(() => ({ loginError: false }));\n\t\t},\n\n\t\tremainingCards: null,\n\t\tupdateRemainingCards: (remainingCards) => {\n\t\t\tset(() => ({ remainingCards }));\n\t\t},\n\t}),\n);\n\nexport default useStore;\n","import Play from './Play';\n\nexport default Play;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Typography, Divider, useMediaQuery } from '@material-ui/core';\nimport { Button } from '../../UI';\nimport useStyles from './styles';\nimport { useFetchPairCard } from '../../hooks/react-query';\nimport { optionChooseCards } from '../../enum';\nimport { bidAmount, namesCards, valueCards } from '../../constants';\nimport useStore from '../../store';\n\nexport default function Play({ deskID }: { deskID: any }) {\n\tconst theme = useTheme();\n\tconst mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\tconst [winner, setWinner] = useState<boolean | null>(null);\n\tconst [isModePlay, setIsModePlay] = useState<boolean | null>(null);\n\tconst [selectedCard, setSelectedCard] = useState<string | null>(null);\n\tconst [cards, setCards] = useState<any[]>([]);\n\tconst { balance, payForPlay, incrementBalance, updateRemainingCards } = useStore();\n\tconst fetchPairCard = useFetchPairCard(deskID, isModePlay);\n\tconst classes = useStyles({ isModePlay });\n\n\tconst { isLoading, data: { cards: currentCard = [], remaining = null } = {} } = fetchPairCard;\n\n\tuseEffect(() => {\n\t\tif (currentCard.length) {\n\t\t\tsetCards(currentCard);\n\t\t\tupdateRemainingCards(remaining);\n\t\t}\n\t}, [currentCard, remaining]);\n\n\tconst onHandlePlay = () => {\n\t\tpayForPlay(bidAmount);\n\t\tsetSelectedCard(null);\n\t\tsetWinner(null);\n\t\treturn setIsModePlay((prev) => !prev);\n\t};\n\tconst definedWinner = (chosenCard: number) => {\n\t\tconst card = cards[chosenCard]?.value;\n\t\tconst otherCard = cards.filter((_, index) => index !== chosenCard)[0]?.value;\n\t\treturn valueCards[card] > valueCards[otherCard];\n\t};\n\n\tconst onHandleCard = (chosenCard: number) => {\n\t\tconst isWinner = definedWinner(chosenCard);\n\t\tsetWinner(isWinner);\n\t\tif (isWinner) incrementBalance(bidAmount * 2);\n\t\tsetSelectedCard(namesCards[chosenCard]);\n\t\tsetIsModePlay((prev) => !prev);\n\t};\n\n\tconst leftCard = <img src={cards.length && cards[optionChooseCards.Left]?.image} alt=\"card\" />;\n\tconst rightCard = useMemo(() => <img src={cards.length && cards[optionChooseCards.Right]?.image} alt=\"card\" />, [cards]);\n\tconst resultText = typeof winner === 'boolean' && winner ? `Вы выйграли ${bidAmount * 2}$` : `Вы проиграли ${bidAmount}$`;\n\n\tconst buttonPlay = !isModePlay ? (\n\t\t<Button\n\t\t\ttype=\"button\"\n\t\t\tsize=\"large\"\n\t\t\tcolor=\"primary\"\n\t\t\tvariant=\"contained\"\n\t\t\tcontent={typeof isModePlay === 'boolean' ? 'Сыграем еще' : 'Играть'}\n\t\t\tonClick={onHandlePlay}\n\t\t/>\n\t) : null;\n\n\tconst selectionButtons = (\n\t\t<>\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcontent={mobile ? 'Сверху' : 'Слева'}\n\t\t\t\tonClick={() => onHandleCard(optionChooseCards.Left)}\n\t\t\t/>\n\t\t\t<Divider orientation=\"vertical\" className={classes.divider} />\n\t\t\t<Button\n\t\t\t\ttype=\"button\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcontent={mobile ? 'Снизу' : 'Справа'}\n\t\t\t\tonClick={() => onHandleCard(optionChooseCards.Right)}\n\t\t\t/>\n\t\t</>\n\t);\n\n\tconst gameOver = balance < bidAmount && winner === false;\n\n\tconst content = (\n\t\t<>\n\t\t\t<div className={classes.card}>\n\t\t\t\t{!selectedCard ? <span className={classes.questionMark}>?</span> : leftCard}\n\t\t\t</div>\n\t\t\t<div className={classes.buttons}>\n\t\t\t\t{gameOver\n\t\t\t\t\t&& <Typography variant=\"h5\" align=\"center\">Game over! <br /> Вы проиграли ...</Typography>}\n\t\t\t\t{isLoading\n\t\t\t\t\t? <Typography align=\"center\">Loading...</Typography>\n\t\t\t\t\t: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{!gameOver && buttonPlay}\n\t\t\t\t\t\t\t{isModePlay && selectionButtons}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={classes.card}>\n\t\t\t\t{!selectedCard ? <span className={classes.questionMark}>?</span> : rightCard}\n\t\t\t</div>\n\n\t\t</>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Typography className={classes.balance} variant=\"h5\">\n\t\t\t\t{`Balance: ${balance}$`}\n\t\t\t</Typography>\n\t\t\t<div className={classes.containerPlay}>\n\t\t\t\t<Typography variant={mobile ? 'h4' : 'h3'}>\n\t\t\t\t\t{ typeof winner === 'boolean' ? resultText : 'Кто выиграет?'}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t\t{typeof winner === 'boolean'\n\t\t\t\t\t\t? 'Сыграй в игру еще раз'\n\t\t\t\t\t\t: 'Сыграй в игру и испытай удачу'}\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container item xs={12} justifyContent=\"center\">\n\t\t\t\t\t<Grid item xs={11} sm={8} className={classes.containerCards}>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => createStyles({\n\tspinner: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\theight: '80vh !important',\n\t},\n}));\n\nexport default useStyles;\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import { CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport useStyles from './styles';\n\nconst Spinner = () => {\n\tconst classes = useStyles();\n\treturn <CircularProgress size={60} thickness={3} className={classes.spinner} />;\n};\nexport default Spinner;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport Play from '../components/Play';\nimport { useFetchDeskID } from '../hooks/react-query';\nimport Spinner from '../components/Spinner';\nimport useStore from '../store';\nimport { countCardsInPlay } from '../constants';\n\nconst BridgePage = () => {\n\tconst fetchDeskID = useFetchDeskID();\n\tconst { remainingCards } = useStore();\n\n\tconst { isLoading, data: { deck_id } = {} } = fetchDeskID;\n\n\tconst deskID: string | undefined = remainingCards !== null && remainingCards < countCardsInPlay ? 'new' : deck_id;\n\n\treturn isLoading ? (\n\t\t<Spinner />\n\t) : (\n\t\t<Play deskID={deskID} />\n\t);\n};\nexport default BridgePage;\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => createStyles({\n\tform: {\n\t\twidth: 'inherit',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmarginTop: 100,\n\t\t'& .MuiInputBase-root': {\n\t\t\tmarginBottom: theme.spacing(2),\n\t\t},\n\t},\n}));\n\nexport default useStyles;\n","import React, { useState } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport { Input, Button } from '../../UI';\nimport useStyles from './styles';\nimport { SingInFormProps } from '../../interfaces/UI';\nimport useStore from '../../store';\nimport { apiUser } from '../../api';\nimport { userError } from '../../constants';\nimport Routes from '../../routing/routes';\n\nexport default function SingInForm() {\n\tconst classes = useStyles();\n\tconst { isAuth, loginSuccess, loginError, activeLoginError, inactiveLoginError } = useStore();\n\n\tconst [formState, setFormState] = useState<SingInFormProps>(\n\t\t{ username: '', password: '' },\n\t);\n\n\tconst onChange = (e: React.ChangeEvent<HTMLInputElement>) => setFormState((prev: SingInFormProps) => ({ ...prev, [e.target.name]: e.target.value }));\n\n\tconst onSubmit: React.FormEventHandler<HTMLFormElement> = (e: React.ChangeEvent<HTMLFormElement>): void => {\n\t\te.preventDefault();\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst isLogin = await apiUser.login(formState);\n\t\t\t\tif (isLogin) {\n\t\t\t\t\tloginSuccess();\n\t\t\t\t\tif (loginError) inactiveLoginError();\n\t\t\t\t} else {\n\t\t\t\t\tactiveLoginError();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// do noting\n\t\t\t}\n\t\t})();\n\t};\n\n\tif (isAuth) {\n\t\treturn (\n\t\t\t<Redirect\n\t\t\t\tto={{\n\t\t\t\t\tpathname: `${Routes.Home.path}`,\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\n\treturn (\n\t\t<Grid item lg={4} sm={6} xs={11}>\n\t\t\t<form onSubmit={onSubmit} className={classes.form}>\n\t\t\t\t<h2>Sing in to your account</h2>\n\t\t\t\t<Input\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tlabel=\"username\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tname=\"username\"\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tname=\"password\"\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tcontent=\"Sing in\"\n\t\t\t\t/>\n\t\t\t\t{loginError && <Typography variant=\"h6\" color=\"secondary\">{userError}</Typography>}\n\t\t\t</form>\n\t\t</Grid>\n\t);\n}\n","import React from 'react';\nimport SingInForm from '../components/SingInForm/SingInForm';\n\nconst LoginPage = () => <SingInForm />;\n\nexport default LoginPage;\n","import { ComponentType } from 'react';\nimport BridgePage from '../pages/BridgePage';\nimport LoginPage from '../pages/LoginPage';\n\ninterface RouteValue {\n  path: string;\n  name: string;\n  component: ComponentType;\n}\n\nconst Routes: { [key: string]: RouteValue } = {\n\tHome: {\n\t\tpath: '/Bridge',\n\t\tname: 'Bridge',\n\t\tcomponent: BridgePage },\n\tLogin: {\n\t\tpath: '/Bridge/login',\n\t\tname: 'LogOut',\n\t\tcomponent: LoginPage,\n\t},\n};\n\nexport default Routes;\n","import AppMenu from './AppMenu';\n\nexport default AppMenu;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { NavLink } from 'react-router-dom';\nimport useStyles from './styles';\nimport Routes from '../../routing/routes';\nimport useStore from '../../store';\n\nexport default function AppMenu() {\n\tconst classes = useStyles();\n\tconst { isAuth, logoutSuccess } = useStore();\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tclassName={classes.appbar}\n\t\t\talignItems=\"center\"\n\t\t\tjustifyContent=\"center\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tlg={8}\n\t\t\t\tsm={10}\n\t\t\t\txs={11}\n\t\t\t\tcontainer\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustifyContent=\"space-between\"\n\t\t\t>\n\t\t\t\t<NavLink exact to={Routes.Home.path} className={classes.link}>\n\t\t\t\t\t{Routes.Home.name}\n\t\t\t\t</NavLink>\n\t\t\t\t{ isAuth\n\t\t\t\t&& (\n\t\t\t\t\t<NavLink to={Routes.Login.path} className={classes.link} onClick={logoutSuccess}>\n\t\t\t\t\t\t{Routes.Login.name}\n\t\t\t\t\t</NavLink>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import React, { FC } from 'react';\nimport {\n\tRoute,\n\tRedirect,\n\tRouteProps,\n} from 'react-router-dom';\nimport Routes from '../../routing/routes';\nimport useStore from '../../store';\n\nconst PrivateRoute: FC<RouteProps> = ({ children, ...props }) => {\n\tconst { isAuth } = useStore();\n\treturn (\n\t\t<Route\n\t\t\t{...props}\n\t\t\trender={({ location }) => (isAuth ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: `${Routes.Login.path}`,\n\t\t\t\t\t\tstate: { from: location },\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))}\n\t\t/>\n\t);\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\nimport AppMenu from './components/AppMenu';\nimport './index.css';\nimport LoginPage from './pages/LoginPage';\nimport BridgePage from './pages/BridgePage';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Routes from './routing/routes';\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AppMenu />\n\t\t\t<Grid container alignItems=\"stretch\" justifyContent=\"center\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\texact\n\t\t\t\t\t>\n\t\t\t\t\t\t<BridgePage />\n\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\tpath={Routes.Home.path}\n\t\t\t\t\t\texact\n\t\t\t\t\t>\n\t\t\t\t\t\t<BridgePage />\n\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t<Route path={Routes.Login.path}>\n\t\t\t\t\t\t<LoginPage />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</QueryClientProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}